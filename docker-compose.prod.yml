version: '3.8'

services:
  # RODOS2 Backend (Spring Boot)
  rodos2-server:
    build:
      context: ./rodos2-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - rodos2-network

  # RODOS2 Frontend (React)
  rodos2-ui:
    build:
      context: ./rodos2-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - NODE_ENV=production
    depends_on:
      - rodos2-server
    restart: unless-stopped
    networks:
      - rodos2-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - rodos2-server
      - rodos2-ui
    restart: unless-stopped
    networks:
      - rodos2-network

  # Redis (캐싱 및 세션 관리)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - rodos2-network

volumes:
  redis-data:

networks:
  rodos2-network:
    driver: bridge
